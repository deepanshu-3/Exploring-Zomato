CREATE DATABASE SQLPORTFOLIO;
use SQLPORTFOLIO;
drop table if exists goldusers_signup;
CREATE TABLE goldusers_signup(userid integer,gold_signup_date date); 

INSERT INTO goldusers_signup(userid,gold_signup_date) 
 VALUES (1,'2017-09-22'),
(3,'2017-04-21');

drop table if exists users;
CREATE TABLE users(userid integer,signup_date date); 

INSERT INTO users(userid,signup_date) 
 VALUES (1,'2014-09-02'),
(2,'2015-01-15'),
(3,'2014-04-11');

drop table if exists sales;
CREATE TABLE sales(userid integer,created_date date,product_id integer); 

INSERT INTO sales(userid,created_date,product_id) 
 VALUES (1,'2017-04-19',2),
(3,'2019-12-18',1),
(2,'2020-07-20',3),
(1,'2019-10-23',2),
(1,'2018-03-19',3),
(3,'2016-12-20',2),
(1,'2016-11-09',1),
(1,'2016-05-20',3),
(2,'2017-09-24',1),
(1,'2017-03-11',2),
(1,'2016-03-11',1),
(3,'2016-11-10',1),
(3,'2017-12-07',2),
(3,'2016-12-15',2),
(2,'2017-11-08',2),
(2,'2018-09-10',3);


drop table if exists product;
CREATE TABLE product(product_id integer,product_name text,price integer); 

INSERT INTO product(product_id,product_name,price) 
 VALUES
(1,'p1',980),
(2,'p2',870),
(3,'p3',330);


select * from sales;
select * from product;
select * from goldusers_signup;
select * from users;

-- 1. WHAT IS THE TOTAL AMAOUNT EACH CUSTOMER SPENT ON ZOMATO
SELECT A.USERID ,SUM(B.PRICE) AS TOTAL_SALES FROM SALES AS A 
INNER JOIN PRODUCT AS B ON A.PRODUCT_ID = B.PRODUCT_ID GROUP BY USERID;

-- 2. HOW MANY DAYS HAS EACH CUSTOMER VISITED ZOMATO
SELECT USERID ,COUNT(DISTINCT CREATED_DATE) AS DAYS FROM SALES GROUP BY USERID ;

-- 3.WHAT WAS THE FIRST PRODUCT PURCHASED BY EACH CUSTMER;
SELECT * FROM 
(SELECT *, RANK() OVER(partition by USERID ORDER BY CREATED_DATE) AS RNK FROM SALES) AS A  
WHERE RNK =1;


-- 4.WHAT IS THE MOST PURCHASED ITEMS ON THE MENU AND HOW MANY TIME WAS IT PERCHASED BY ALL CUSTMERS;
SELECT USERID ,COUNT(PRODUCT_ID) AS CNT FROM SALES WHERE PRODUCT_ID =
(SELECT PRODUCT_ID FROM SALES GROUP BY PRODUCT_ID ORDER BY COUNT(PRODUCT_ID) DESC LIMIT 1) GROUP BY USERID ;


-- 5.which items was the most popular for each customer.

SELECT * FROM(
SELECT * ,RANK() OVER (partition by USERID ORDER BY CNT DESC)AS RNK FROM (
SELECT USERID,PRODUCT_ID,COUNT(PRODUCT_ID)AS CNT  FROM SALES GROUP BY USERID , PRODUCT_ID )AS A) AS B
 WHERE RNK =1; 


-- 6.which item was purchased first by the customer after they became a member;
select * from
(SELECT * ,rank() over(partition by userid order by created_date )  as rnk from 
(SELECT A.USERID ,A.CREATED_DATE,A.PRODUCT_ID,B.GOLD_SIGNUP_DATE FROM SALES AS A INNER JOIN 
GOLDUSERS_SIGNUP AS B ON A.USERID=B.USERID AND CREATED_DATE>=GOLD_SIGNUP_DATE) as a ) as b where rnk =1;


-- 7.which items was purchased just before the customer become a member

SELECT * FROM 
(SELECT C.*,RANK() OVER ( PARTITION BY USERID ORDER BY CREATED_DATE DESC) AS RNK FROM 
( SELECT A.USERID , A.CREATED_DATE ,A.PRODUCT_ID ,B.GOLD_SIGNUP_DATE FROM SALES AS A 
INNER JOIN GOLDUSERS_SIGNUP AS B ON A.USERID=B.USERID AND CREATED_DATE<GOLD_SIGNUP_DATE) AS C) AS D WHERE RNK = 1;


-- 8. WHAT IS THE TOTAL ORDERS AND AMOUNT SPENT FOR EACH MEMBER BEFORE THEY BECAME A MEMBER. 

SELECT USERID ,COUNT(CREATED_DATE)AS ORDER_PURCHSED, SUM(TOTAL) AS TOTAL_AMT_SPENT FROM (SELECT C.* , D.PRICE AS TOTAL FROM 
(SELECT A.USERID ,A.PRODUCT_ID,A.CREATED_DATE ,B.GOLD_SIGNUP_DATE FROM SALES AS A 
INNER JOIN GOLDUSERS_SIGNUP AS B ON A.USERID = B.USERID AND CREATED_DATE<=GOLD_SIGNUP_DATE )AS C 
INNER JOIN PRODUCT AS D ON C.PRODUCT_ID=D.PRODUCT_ID) AS D GROUP BY USERID;


-- 9.IF BUYING EACH PRODUCT GENERATES POINS FOR EG  5RS=2 ZOMATO POINT AND EACH PRODUCTS HAS DIFFERENT PURCHASING POINTS
--  FOR eg FOR P1 5RS=1 ZEMATO POINT FOR P2 10RS = 5 ZAMATO POINT AND P3 5RS=1 ZEMATO POINT
--  ,CALCULATE POINTS COLLECTED BY EACH CUSTOMERS AND FOR WHICH PRODUCT MOST POINTS HAVE GIVEN TILL NOW.
      
      
	-- CALCULATE POINTS COLLECTED BY EACH CUSTOMERS
SELECT USERID , SUM(TOTAL_POINTS) AS TOTAL_POINTS_EARNED FROM
(SELECT E.* ,floor(AMT/POINTS) AS TOTAL_POINTS FROM
(SELECT D.* , CASE WHEN PRODUCT_ID =1 THEN 5 WHEN PRODUCT_ID =2 THEN 2 WHEN PRODUCT_ID = 3 THEN 5 ELSE 0 END AS POINTS FROM   
(SELECT C.USERID,C.PRODUCT_ID , SUM(PRICE) AS AMT FROM 
(SELECT A.USERID,A.PRODUCT_ID,B.PRICE FROM SALES AS A INNER JOIN PRODUCT AS B ON A.PRODUCT_ID=B.PRODUCT_ID) AS C 
GROUP BY USERID, PRODUCT_ID)AS D) AS E) AS F  GROUP BY USERID ;


	-- IF BUYING EACH PRODUCT GENERATES POINS FOR EG  5RS=2 ZOMATO POINT OR TOTAL MONEY EARNED USING POINTS.
SELECT USERID , SUM(TOTAL_POINTS)*2.5 AS TOTAL_MONEY_EARNED FROM
(SELECT E.* ,floor(AMT/POINTS) AS TOTAL_POINTS FROM
(SELECT D.* , CASE WHEN PRODUCT_ID =1 THEN 5 WHEN PRODUCT_ID =2 THEN 2 WHEN PRODUCT_ID = 3 THEN 5 ELSE 0 END AS POINTS FROM   
(SELECT C.USERID,C.PRODUCT_ID , SUM(PRICE) AS AMT FROM 
(SELECT A.USERID,A.PRODUCT_ID,B.PRICE FROM SALES AS A INNER JOIN PRODUCT AS B ON A.PRODUCT_ID=B.PRODUCT_ID) AS C 
GROUP BY USERID, PRODUCT_ID)AS D) AS E) AS F  GROUP BY USERID ;

      -- WHICH PRODUCT MOST POINTS HAVE GIVEN TILL NOW 
SELECT * FROM (SELECT * ,RANK() OVER(ORDER BY TOTAL_POINTS_EARNED_BY_EACH_PRODUCT  DESC) AS RNK FROM
(SELECT PRODUCT_ID , SUM(TOTAL_POINTS)AS TOTAL_POINTS_EARNED_BY_EACH_PRODUCT FROM 
(SELECT E.* ,floor(AMT/POINTS) AS TOTAL_POINTS FROM
(SELECT D.* , CASE WHEN PRODUCT_ID =1 THEN 5 WHEN PRODUCT_ID =2 THEN 2 WHEN PRODUCT_ID = 3 THEN 5 ELSE 0 END AS POINTS FROM   
(SELECT C.USERID,C.PRODUCT_ID , SUM(PRICE) AS AMT FROM 
(SELECT A.USERID,A.PRODUCT_ID,B.PRICE FROM SALES AS A INNER JOIN PRODUCT AS B ON A.PRODUCT_ID=B.PRODUCT_ID) AS C 
GROUP BY USERID, PRODUCT_ID)AS D) AS E ) AS F GROUP BY PRODUCT_ID) AS G) AS H WHERE RNK= 1 ;



-- 10. IN THE FIRST ONE YEAR AFTER A CUSTOMER JOINS THE GOLD PROGRAM(INCLUDING THEIR JOIN DATE ) IRRESPECTIVE 
-- OF WHAT THE CUSTOMER HAS PURCHASED THEY EARN 5 ZOMATO POINTS FOR EVERY 10RS SPENT WHO EARNED  MORE 1 OR 3
--  AND WHAT WAS THEIR POINTS EARNINGS IN THEIR FIRST Yr.

-- 5Z=10RS
-- 1Z=2RS
-- 1RS=O.5Z

SELECT C.* ,D.PRICE *0.5 AS TOTAL_POINTS_EARNED FROM 
(SELECT A.USERID , A.CREATED_DATE ,A.PRODUCT_ID ,B.GOLD_SIGNUP_DATE FROM SALES AS A INNER JOIN 
GOLDUSERS_SIGNUP AS B ON A.USERID=B.USERID AND CREATED_DATE>=GOLD_SIGNUP_DATE AND CREATED_DATE<=DATE_ADD(GOLD_SIGNUP_DATE,INTERVAL 1 YEAR)) AS  C  
INNER JOIN PRODUCT AS D ON C.PRODUCT_ID=D.PRODUCT_ID ;


-- 11.RNK ALL THE TRANSACTION OF THE CUSTOMERS.

SELECT *,RANK() OVER(PARTITION BY USERID ORDER BY CREATED_DATE) AS RNK FROM SALES;


-- 12.RANK ALL THE TRANSACTION FOR EACH MEMBER WHENEVER THEY ARE A ZOMATO GOLD MEMBER FOR EVERY NON GOLD MEMBER TRANSACTION MARK AS NA.

SELECT *,CASE WHEN GOLD_SIGNUP_DATE IS NULL THEN 'NA' ELSE RANK() OVER (PARTITION BY USERID ORDER BY CREATED_DATE DESC) END AS RNK  FROM 
(SELECT A.USERID, A.CREATED_DATE ,A.PRODUCT_ID ,B.GOLD_SIGNUP_DATE FROM SALES AS A LEFT JOIN
GOLDUSERS_SIGNUP AS B ON A.USERID=B.USERID AND  CREATED_DATE>=GOLD_SIGNUP_DATE)AS C;
